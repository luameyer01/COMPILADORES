
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMA END ID IGUAL INT LLAVE_ABIERTA LLAVE_CERRADA MAS PARENTESIS_ABIERTO PARENTESIS_CERRADO PRINTF PROGRAMA PUNTOCOMA READ STRINGprograma : ID ID PARENTESIS_ABIERTO  PRINTF PARENTESIS_CERRADO  LLAVE_ABIERTA  declaration statements END PUNTOCOMA LLAVE_CERRADAdeclaration : INT varlist PUNTOCOMAvarlist : ID\n            | ID COMA varliststatements : statement statements\n                | statementstatement : READ ID PUNTOCOMAstatement : PRINTF PARENTESIS_ABIERTO STRING PARENTESIS_CERRADO PUNTOCOMA\n                | PRINTF PARENTESIS_ABIERTO ID PARENTESIS_CERRADO PUNTOCOMAstatement : ID IGUAL expression PUNTOCOMAexpression : ID MAS ID'
    
_lr_action_items = {'ID':([0,2,8,9,13,14,17,18,22,23,29,31,32,37,38,],[2,3,10,16,10,21,24,27,-2,16,-7,36,-10,-8,-9,]),'$end':([1,35,],[0,-1,]),'PARENTESIS_ABIERTO':([3,11,],[4,18,]),'PRINTF':([4,8,13,22,29,32,37,38,],[5,11,11,-2,-7,-10,-8,-9,]),'PARENTESIS_CERRADO':([5,26,27,],[6,33,34,]),'LLAVE_ABIERTA':([6,],[7,]),'INT':([7,],[9,]),'READ':([8,13,22,29,32,37,38,],[14,14,-2,-7,-10,-8,-9,]),'IGUAL':([10,],[17,]),'END':([12,13,20,29,32,37,38,],[19,-6,-5,-7,-10,-8,-9,]),'PUNTOCOMA':([15,16,19,21,25,30,33,34,36,],[22,-3,28,29,32,-4,37,38,-11,]),'COMA':([16,],[23,]),'STRING':([18,],[26,]),'MAS':([24,],[31,]),'LLAVE_CERRADA':([28,],[35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaration':([7,],[8,]),'statements':([8,13,],[12,20,]),'statement':([8,13,],[13,13,]),'varlist':([9,23,],[15,30,]),'expression':([17,],[25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> ID ID PARENTESIS_ABIERTO PRINTF PARENTESIS_CERRADO LLAVE_ABIERTA declaration statements END PUNTOCOMA LLAVE_CERRADA','programa',11,'p_program','app1.py',59),
  ('declaration -> INT varlist PUNTOCOMA','declaration',3,'p_declaration','app1.py',65),
  ('varlist -> ID','varlist',1,'p_varlist','app1.py',69),
  ('varlist -> ID COMA varlist','varlist',3,'p_varlist','app1.py',70),
  ('statements -> statement statements','statements',2,'p_statements','app1.py',74),
  ('statements -> statement','statements',1,'p_statements','app1.py',75),
  ('statement -> READ ID PUNTOCOMA','statement',3,'p_statement_read','app1.py',79),
  ('statement -> PRINTF PARENTESIS_ABIERTO STRING PARENTESIS_CERRADO PUNTOCOMA','statement',5,'p_statement_printf','app1.py',83),
  ('statement -> PRINTF PARENTESIS_ABIERTO ID PARENTESIS_CERRADO PUNTOCOMA','statement',5,'p_statement_printf','app1.py',84),
  ('statement -> ID IGUAL expression PUNTOCOMA','statement',4,'p_statement_assign','app1.py',89),
  ('expression -> ID MAS ID','expression',3,'p_expression','app1.py',93),
]
